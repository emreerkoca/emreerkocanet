[
    
        
            {
                "ref": "https://www.emreerkoca.net/post/dotnetcorelocalization/",
                "title": "Dotnet Core Localization",
                "section": "post",
                "date" : "2021.02.26",
                "body": "I had to make a multi language application. Because there are a lot of languages and you might want to be global for more customers.\nI had to make a multi language application. Because there are a lot of languages and you might want to be global for more customers. I wanted to write a simple example before localization. I read documents and I felt a little bit confused. Then, I wanted to share my sample code.\nYou can store your text messages in a resources file. A resource record is composed of two parts. Name and value. Actually there is one more part (comment) but probably you won’t use this part.\nAn example resource file looking like this:\nYou can create resource files for different languages. Resource.resx, Resource.de.resx, Resource.es.resx, etc.\nIf you want to apply localization properly, names must be same in your resource files. When the localizer doesn't find resource content, it returns null. I’ll explain this project step by step. https://github.com/emreerkoca/LocalizationExample It’s a simple Dotnet Core Web Api project.\n Add Resources folder to your project. Add your resource files.  Add a new folder to your project as “Localize” and add a public class to Localize folder.  namespace LocalizationExample.Localize\r{\rpublic class Resource\r{\r}\r}  If you want you can use different names but your resource names and your resources must be suitable. You will reach resource content through this empty class.\nResource name: Localize.Resource.de.resx Namespace is your class is LocalizationExample.Localize and class name is Resource.cs\nStartup.cs configuration  Add this code block to into ConfigureServices(IServiceCollection services) method\nservices.AddLocalization(options =\u0026gt;\r{\roptions.ResourcesPath = \u0026#34;Resources\u0026#34;;\r});\rservices.Configure\u0026lt;RequestLocalizationOptions\u0026gt;(options =\u0026gt;\r{\rvar supportedCultures = new[]\r{\rnew CultureInfo(\u0026#34;en-US\u0026#34;),\rnew CultureInfo(\u0026#34;de\u0026#34;)\r};\roptions.DefaultRequestCulture = new RequestCulture(culture: \u0026#34;en-US\u0026#34;, uiCulture: \u0026#34;en-US\u0026#34;);\roptions.SupportedCultures = supportedCultures;\roptions.SupportedUICultures = supportedCultures;\r});  It’s about adding supported languages for localizers. Showing your resource files. Selecting default language.\nAdd this code block to boldConfigure(IApplicationBuilder app, IWebHostEnvironment env)bold method.\nvar locOptions = app.ApplicationServices.GetService\u0026lt;IOptions\u0026lt;RequestLocalizationOptions\u0026gt;\u0026gt;();\rapp.UseRequestLocalization(locOptions.Value);  It’s for automatically setting culture info for your localizer. You can set culture info by any request header value.\nShowing localized messages  I used IStringLocalizer interface for reaching resource files. You can see an example usage here. Add dependencies and call the resource field name.\nprivate readonly IStringLocalizer\u0026lt;Resource\u0026gt; _stringLocalizer;\rpublic HomeController(IStringLocalizer\u0026lt;Resource\u0026gt; stringLocalizer)\r{\r_stringLocalizer = stringLocalizer;\r}\r[HttpGet]\rpublic string Get()\r{\rvar value = _stringLocalizer[\u0026#34;Hello\u0026#34;];\rreturn value;\r}  Get() method will return “Hello!” because English is default culture and English resource value is “Hello!” When you add “culture=de” to your request url, you’ll change culture as “de” and you’ll see “Hallo!” message.\nIf you want you can detect current language from “Accept-Language” header. You can change your configuration.\nChange your ConfigureServices configuration part like this:\npublic void ConfigureServices(IServiceCollection services)\r{\rservices.AddControllers();\rservices.AddLocalization(options =\u0026gt;\r{\roptions.ResourcesPath = \u0026#34;Resources\u0026#34;;\r});\rservices.Configure\u0026lt;RequestLocalizationOptions\u0026gt;(options =\u0026gt;\r{\rvar supportedCultures = new[]\r{\rnew CultureInfo(\u0026#34;en-US\u0026#34;),\rnew CultureInfo(\u0026#34;de\u0026#34;)\r};\roptions.SupportedCultures = supportedCultures;\roptions.SupportedUICultures = supportedCultures;\roptions.RequestCultureProviders.Insert(0, new CustomRequestCultureProvider(context =\u0026gt;\r{\rvar languages = context.Request.Headers[\u0026#34;Accept-Language\u0026#34;].ToString();\rvar currentLanguage = languages.Split(\u0026#39;,\u0026#39;).FirstOrDefault();\rvar defaultLanguage = string.IsNullOrEmpty(currentLanguage) ? \u0026#34;en-US\u0026#34; : currentLanguage;\rif (defaultLanguage != \u0026#34;de\u0026#34; \u0026amp;\u0026amp; defaultLanguage != \u0026#34;en-US\u0026#34;)\r{\rdefaultLanguage = \u0026#34;en-US\u0026#34;;\r}\rreturn Task.FromResult(new ProviderCultureResult(defaultLanguage, defaultLanguage));\r}));\r});\r}  It’s reading the “Accept-Language” header value and getting the default language. Put a breakpoint after the language variable and see values. It’s changeable for different browser languages. If you feel confused when you read CustomRequestCultureProvider, ProviderCultureResult, etc. you can read them from official Microsoft documents.\nNow, you don’t have to add a culture parameter to request url. You can try to get values from English and German browsers.\nYou can read this document for detailed information. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization?view=aspnetcore-5.0\nI have nothing to say after this. I hope it might be helpful.\n"
            }
        
    ,
        
            {
                "ref": "https://www.emreerkoca.net/post/mutationobserverandevent/",
                "title": "MutationObserver and Event Usage",
                "section": "post",
                "date" : "2020.05.29",
                "body": "I wanted to share a simple example of MutationObserver and Event.\nI want to explain it through an example. Say you have your own company and you're working with e-commerce companies. Your customer says to you \u0026ldquo;Can you provide user's last added product for another consultant company. We need this information\u0026rdquo; and you said \u0026ldquo;Yes, we can do this\u0026rdquo;\nOf course, you can find a professional solution to this problem. I'll make this with MutationObserver and Event. MutationObserver is using detect DOM changes. For example, you have an element. You can detect any changes in this element. Adding a new child element, changing element content, adding new attribute, etc. I used it for my card page element. It's imitating a basic cart page. I'll add a child div to here as a product.\n\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;MutationObserve and Event Usage\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div class=\u0026#34;cart-modal\u0026#34;\u0026gt;\r\u0026lt;div class=\u0026#34;product\u0026#34; data-product-id=\u0026#34;424242\u0026#34;\u0026gt;Product 1\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026#34;product\u0026#34; data-product-id=\u0026#34;213113\u0026#34;\u0026gt;Product 2\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt; I added a new child element in this code.\nsetTimeout(function() {\rvar product = document.createElement(\u0026#34;div\u0026#34;);\rvar node = document.createTextNode(\u0026#34;Product 3\u0026#34;);\rproduct.appendChild(node);\rproduct.classList.add(\u0026#39;product\u0026#39;);\rproduct.setAttribute(\u0026#39;data-product-id\u0026#39;, \u0026#39;232323\u0026#39;);\rvar element = document.querySelector(\u0026#34;.cart-modal\u0026#34;);\relement.appendChild(product);\r}, 4000);  I used setTimeout to wait for 4000 milliseconds. Because we want to detect DOM changes. It'll trigger after 4000 milliseconds. You can review MutationObserver sample codes from here:\n//Your target element\rconst targetNode = document.querySelector(\u0026#39;.cart-modal\u0026#39;);\r//config defined for change types. I\u0026#39;m just listening child element additions\rconst config = { childList: true };\r//You\u0026#39;ll understand this from name. MutationList so list of detected mutations\rconst callback = function(mutationsList, observer) {\rfor(let mutation of mutationsList) { if (mutation.type === \u0026#39;childList\u0026#39;) {\r//if mutation type is childList, any child element has been added or any child element has been modified\r //I created a new event and I triggered it. I explained it below\r createAndTriggerEvent({\rid: mutation.addedNodes[0].attributes[\u0026#39;data-product-id\u0026#39;].nodeValue,\rname: mutation.addedNodes[0].innerText\r});\r}\r}\r};\rconst observer = new MutationObserver(callback);\r// Start observing the target node for configured mutations\robserver.observe(targetNode, config);\r// Later, you can stop observing.\r//observer.disconnect();  I wrote createAndTriggerEvent function for creating a new Event and triggering it. When our data is ready we're triggering it.\ncreateAndTriggerEvent = (productInfo) =\u0026gt; {\rvar event = new Event(\u0026#39;listenLastAddedProduct\u0026#39;);\rwindow.lastAddedProduct = productInfo;\rdocument.dispatchEvent(event);\r}  Finally, I'm listening to our custom event. When it's triggering we're catching data.\ndocument.addEventListener(\u0026#39;listenLastAddedProduct\u0026#39;, function (e) {\rconsole.log(window.lastAddedProduct);\r}, false);  You can get all JavaScript codes from here:\ncreateAndTriggerEvent = (productInfo) =\u0026gt; {\rvar event = new Event(\u0026#39;listenLastAddedProduct\u0026#39;);\rwindow.lastAddedProduct = productInfo;\rdocument.dispatchEvent(event);\r}\rsetTimeout(function() {\rvar product = document.createElement(\u0026#34;div\u0026#34;);\rvar node = document.createTextNode(\u0026#34;Product 3\u0026#34;);\rproduct.appendChild(node);\rproduct.classList.add(\u0026#39;product\u0026#39;);\rproduct.setAttribute(\u0026#39;data-product-id\u0026#39;, \u0026#39;232323\u0026#39;);\rvar element = document.querySelector(\u0026#34;.cart-modal\u0026#34;);\relement.appendChild(product);\r}, 4000);\rconst targetNode = document.querySelector(\u0026#39;.cart-modal\u0026#39;);\rconst config = { childList: true };\rconst callback = function(mutationsList, observer) {\rfor(let mutation of mutationsList) { console.log(mutationsList);\rif (mutation.type === \u0026#39;childList\u0026#39;) {\rcreateAndTriggerEvent({\rid: mutation.addedNodes[0].attributes[\u0026#39;data-product-id\u0026#39;].nodeValue,\rname: mutation.addedNodes[0].innerText\r});\r}\r}\r};\rconst observer = new MutationObserver(callback);\robserver.observe(targetNode, config);\rdocument.addEventListener(\u0026#39;listenLastAddedProduct\u0026#39;, function (e) {\rconsole.log(window.lastAddedProduct);\r}, false);\r// Later, you can stop observing\r//observer.disconnect(); "
            }
        
    ,
        
            {
                "ref": "https://www.emreerkoca.net/post/calculatesessioncount/",
                "title": "Calculating User's Session Count",
                "section": "post",
                "date" : "2020.04.19",
                "body": "I wanted to calculate the user's session count through session storage and local storage.\n Get the last session value from local storage.   If there is no stored value create new storage items. Session storage prevents increase value in the same session. If the last session value is not null, the user was closed browser and opened it again. Increase the last storage value and save the last values.   Finally it returns session count.  var updateStorages = (storageValue) =\u0026gt; {\rlocalStorage.setItem(\u0026#39;last-session-value\u0026#39;, storageValue);\rsessionStorage.setItem(\u0026#39;current-session\u0026#39;, storageValue);\r};\rvar getSessionCount = () =\u0026gt; {\rvar lastSessionValue = localStorage.getItem(\u0026#39;last-session-value\u0026#39;);\rif (lastSessionValue === null) {\rupdateStorages(1);\r} else if (lastSessionValue \u0026amp;\u0026amp; sessionStorage.getItem(\u0026#39;current-session\u0026#39;) === null) {\rlastSessionValue++;\rupdateStorages(lastSessionValue);\r}\rreturn parseInt(lastSessionValue);\r};\rgetSessionCount();  It's my first technical post. It's just basic solution and I wanted to share it. I would like write more complicated things too. Cheers.\n"
            }
        
    
]